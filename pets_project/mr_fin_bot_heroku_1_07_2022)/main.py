import os
import telebot
import logging
from telebot import types
from datetime import datetime, timedelta

import db
from config import *
from flask import Flask, request
import psycopg2
import helper as h

bot = telebot.TeleBot(BOT_TOKEN)
server = Flask(__name__)
logger = telebot.logger
logger.setLevel(logging.INFO)

db_connection = psycopg2.connect(DB_URI, sslmode="require")
db_object = db_connection.cursor()


finta_dict = {}
class Finta:
    def __init__(self, suma):
        self.suma = suma
        self.category = None
        self.category_abstraction = None
        self.approved = None


def update_message_count(user_id):
    db_object.execute(f"UPDATE users SET messages = messages + 1 WHERE id_telegram = {user_id}")
    db_connection.commit()


@bot.message_handler(commands=["start"])
def start(message):

    user_id = message.from_user.id
    username = message.from_user.username
    bot.reply_to(message, f"–ü—Ä–∏–≤—ñ—Ç {username}!")

    result = db.inspect(user_id)
    if not result:

        msg = bot.send_message(message.chat.id, f"‚õîÔ∏è–í–∞—Å –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ\n–î–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é\nüì≤‚û°Ô∏è /registration")
        bot.register_next_step_handler(msg, regestration)
        db.add_db(user_id, username)

    bot.send_message(message.chat.id, f"–í–∏ —î –≤ –±–∞–∑—ñ‚úÖ")
    update_message_count(user_id)


@bot.message_handler(commands=['registration'])
def regestration(message):

    try:
        keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        button_phone = types.KeyboardButton(text="–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact=True)
        keyboard.add(button_phone)

        bot.send_message(message.chat.id, f'–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚¨áÔ∏è', reply_markup=keyboard)
        update_message_count(message.from_user.id)
    except Exception as e:
        print(e)
        bot.reply_to(message, '–û—Ç—Ä–∏–º–∞–π—Ç–µ –¥–æ–∑–≤—ñ–ª –≤—ñ–¥ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞')

@bot.message_handler(content_types=['contact'])
def contact(message):
    markup = types.ReplyKeyboardRemove(selective=False)
    try:
        if message.contact is not None:
            bot.send_message(message.chat.id, f'–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –±–∞–∑—Éü§ù', reply_markup=markup)
            db.phone(message.from_user.id, message.contact.phone_number)
            update_message_count(message.from_user.id)

    except Exception as e:
        print(e)
        bot.reply_to(message, 'contact error')


@bot.message_handler(regexp="^[+]?[0-9]+$")
def getting_suma(message):

    try:
        logging.info("Initialization command contact")
        chat_id = message.chat.id
        suma = message.text
        finta = Finta(suma)
        finta_dict[chat_id] = finta

        keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        food = types.KeyboardButton(text="üçè–ø—Ä–æ–¥—É–∫—Ç–∏")
        utilities = types.KeyboardButton(text="üè†–∫–æ–º—É–Ω–∞–ª—å–Ω—ñ")
        cafe = types.KeyboardButton(text="‚òïÔ∏è–∫–∞—Ñ–µ")
        credit = types.KeyboardButton(text="üí≥–∫—Ä–µ–¥–∏—Ç–∏")
        dpay = types.KeyboardButton(text="üí∞+–≤–∏—Ç—Ä–∞—Ç–∏")
        invest = types.KeyboardButton(text="üìä—ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ—ó")

        keyboard.add(food, utilities, cafe, credit, dpay, invest)
        msg = bot.send_message(message.chat.id, f'–ö–∞—Ç–µ–≥–æ—Ä—ñ—è ‚¨áÔ∏è', reply_markup=keyboard)
        bot.register_next_step_handler(msg, category_sum)

    except Exception as e:
        print(e)
        bot.reply_to(message, '–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-1')


def category_sum(message):

    try:
        logging.info("Initialization command contact")
        chat_id = message.chat.id
        category = message.text
        finta = finta_dict[chat_id]
        parse_category = h.category_parser(category)
        finta.category = parse_category
        finta.category_abstraction = category

        markup = types.ReplyKeyboardRemove(selective=False)
        bot.send_message(message.chat.id, f"–ü—Ä–∞–≤–∏–ª—å–Ω–æ: {finta.suma} –≥—Ä–Ω, –≤–∏—Ç—Ä–∞—á–µ–Ω–æ –Ω–∞ {finta.category_abstraction}?",
                         reply_markup=markup)

        keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        yes = types.KeyboardButton(text="‚úÖ–í—ñ—Ä–Ω–æ")
        cancel = types.KeyboardButton(text="‚õîÔ∏è–í—ñ–¥–º—ñ–Ω–∞")
        keyboard.add(yes, cancel)
        msg = bot.send_message(message.chat.id, f'–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è ‚¨áÔ∏è', reply_markup=keyboard)
        bot.register_next_step_handler(msg, final_step)
    except Exception as e:
        print(e)
        markup = types.ReplyKeyboardRemove(selective=False)
        bot.reply_to(message, '–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-2 –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑)', reply_markup=markup)


def final_step(message):

    try:
        logging.info("Initialization command contact")
        chat_id = message.chat.id
        answer = message.text
        finta = finta_dict[chat_id]
        parse_answer = h.answer_parser(answer)
        finta.approved = parse_answer

        markup = types.ReplyKeyboardRemove(selective=False)
        if finta.approved:
            logging.info("Initialization command contact")
            time = datetime.now()
            bot.send_message(message.chat.id, f"‚úÖ–°—É–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n"
                                              f"{finta.category_abstraction}: + {finta.suma} –≥—Ä–Ω\n"

                                              f"–Ø–∫ –±—É–¥–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–æ—Å—Ç–æ –¥–æ–¥–∞–π—Ç–µ —Å—É–º—É",
                             reply_markup=markup)
            db.protect(f"{message.from_user.id}", f"{finta.category}", int(finta.suma), time)
        else:
            bot.send_message(message.chat.id, f"üí∏–ü–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)\n–≤–≤–µ–¥—ñ—Ç—å —Å—É–º—É —è–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø–∏—Å–∞—Ç–∏‚¨áÔ∏è",
                             reply_markup=markup)

    except Exception as e:
        print(e)
        markup = types.ReplyKeyboardRemove(selective=False)
        bot.reply_to(message, '–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-3', reply_markup=markup)


@bot.message_handler(commands=['analitics'])
def analitics(message):
    try:
        logging.info("Initialization command contact")
        keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        yes = types.KeyboardButton(text="üìä–ó–∞–≥–∞–ª—å–Ω–∞")
        cancel = types.KeyboardButton(text="üìà–û–∫—Ä–µ–º–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó")
        keyboard.add(yes, cancel)
        msg = bot.send_message(message.chat.id, f'–í–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å –∞–Ω–∞–ª—ñ—Ç–∏–∫–∞ –ø–æ —É—Å—ñ–º –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º —á–∏ —Ç—ñ–ª—å–∫–∏ –æ–∫—Ä–µ–º–æ—ó?', reply_markup=keyboard)
        bot.register_next_step_handler(msg, analitics_all)
    except Exception as e:
            print(e)
            markup = types.ReplyKeyboardRemove(selective=False)
            bot.reply_to(message, '–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-4', reply_markup=markup)

def analitics_all(message):
    try:
        markup = types.ReplyKeyboardRemove(selective=False)
        if message.text == f"üìä–ó–∞–≥–∞–ª—å–Ω–∞":
            analitica = db.info_all_category(f"{message.from_user.id}")
            bot.send_message(message.chat.id, f"{analitica}", reply_markup=markup)

        elif message.text == f"üìà–û–∫—Ä–µ–º–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó":

            keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            food = types.KeyboardButton(text="üçè–ø—Ä–æ–¥—É–∫—Ç–∏")
            utilities = types.KeyboardButton(text="üè†–∫–æ–º—É–Ω–∞–ª—å–Ω—ñ")
            cafe = types.KeyboardButton(text="‚òïÔ∏è–∫–∞—Ñ–µ")
            credit = types.KeyboardButton(text="üí≥–∫—Ä–µ–¥–∏—Ç–∏")
            dpay = types.KeyboardButton(text="üí∞+–≤–∏—Ç—Ä–∞—Ç–∏")
            invest = types.KeyboardButton(text="üìä—ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ—ó")

            keyboard.add(food, utilities, cafe, credit, dpay, invest)
            msg = bot.send_message(message.chat.id, f'–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é ‚¨áÔ∏è', reply_markup=keyboard)
            bot.register_next_step_handler(msg, analitics_category_final)

    except Exception as e:
            markup = types.ReplyKeyboardRemove(selective=False)
            bot.send_message(message.chat.id, f"üí∏–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-5', –ø–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)‚¨áÔ∏è", reply_markup=markup)


def analitics_category_final(message):
    markup = types.ReplyKeyboardRemove(selective=False)
    try:
        category = message.text
        parse_category = h.category_parser(category)
        analitica = db.info_one_category(f"{message.from_user.id}",f"{parse_category}",f"{category}")
        bot.send_message(message.chat.id, f"{analitica}",reply_markup=markup)

    except Exception as e:
        print(e)
        bot.send_message(message.chat.id, f"üí∏–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-6', –ø–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)‚¨áÔ∏è", reply_markup=markup)


@bot.message_handler(commands=['delete'])
def dellete(message):
    try:
        logging.info("Initialization command contact")
        keyboard = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
        all_dell = types.KeyboardButton(text="üî´–í–∏–¥–∞–ª–∏—Ç–∏ —É—Å—ñ –≤–∏—Ç—Ä–∞—Ç–∏")
        last_dell = types.KeyboardButton(text="‚öîÔ∏è–í–∏–¥–∞–ª–∏—Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó")
        keyboard.add(all_dell, last_dell)
        msg = bot.send_message(message.chat.id, f'–Ø–∫—â–æ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ –∑–∞–ø–∏—Å–∏ –∑ —É—Å—ñ—Ö –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–æ –æ–±–∏—Ä–∞–π—Ç–µ: üî´–í–∏–¥–∞–ª–∏—Ç–∏ —É—Å—ñ –≤–∏—Ç—Ä–∞—Ç–∏\n\n'
                                                f'–ê —è–∫—â–æ –≤–∞–º —Ç—Ä–µ–±–∞ –≤–∏–¥–∞–ª–∏—Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏ –ø–µ–≤–Ω–æ—ó –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –∞–±–æ –æ—Å—Ç–∞–Ω–Ω—é —Å—É–º—É –≤ –Ω—ñ–π —Ç–æ: \n‚öîÔ∏è–í–∏–¥–∞–ª–∏—Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó\n\n'
                                                f'ü§î–©–æ –±—É–¥–µ–º–æ –≤–∏–¥–∞–ª—è—Ç–∏?', reply_markup=keyboard)
        bot.register_next_step_handler(msg, dell_a)
    except Exception as e:
            print(e)
            markup = types.ReplyKeyboardRemove(selective=False)
            bot.reply_to(message, '–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-8.1 (dellete)', reply_markup=markup)

def dell_a(message):
    try:
        markup = types.ReplyKeyboardRemove(selective=False)
        if message.text == f"üî´–í–∏–¥–∞–ª–∏—Ç–∏ —É—Å—ñ –≤–∏—Ç—Ä–∞—Ç–∏":
            logging.info("Initialization command contact")
            keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            yes = types.KeyboardButton(text="‚úÖ–¢–∞–∫")
            cancel = types.KeyboardButton(text="‚õîÔ∏è–ù—ñ")
            keyboard.add(yes, cancel)
            msg = bot.send_message(message.chat.id,
                                   f'üî¥–£—Å—ñ –∑–∞–ø–∏—Å–∏ –≤–∏—Ç—Ä–∞—Ç –±—É–¥—É—Ç—å –≤–∏–¥–∞–ª–µ–Ω—ñ, –ø–æ—Ç—ñ–º –Ω–∞–∑–∞–¥ –≤–∂–µ –Ω—ñ—á–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏'
                                   f'\n –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ ?ü§î', reply_markup=keyboard)
            bot.register_next_step_handler(msg, dellete_all)

        elif message.text == f"‚öîÔ∏è–í–∏–¥–∞–ª–∏—Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó":
            chat_id = message.chat.id
            suma = message.text
            finta = Finta(suma)
            finta_dict[chat_id] = finta

            keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            food = types.KeyboardButton(text="üçè–ø—Ä–æ–¥—É–∫—Ç–∏")
            utilities = types.KeyboardButton(text="üè†–∫–æ–º—É–Ω–∞–ª—å–Ω—ñ")
            cafe = types.KeyboardButton(text="‚òïÔ∏è–∫–∞—Ñ–µ")
            credit = types.KeyboardButton(text="üí≥–∫—Ä–µ–¥–∏—Ç–∏")
            dpay = types.KeyboardButton(text="üí∞+–≤–∏—Ç—Ä–∞—Ç–∏")
            invest = types.KeyboardButton(text="üìä—ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ—ó")

            keyboard.add(food, utilities, cafe, credit, dpay, invest)
            msg = bot.send_message(message.chat.id, f'–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é ‚¨áÔ∏è', reply_markup=keyboard)
            bot.register_next_step_handler(msg, dell_category_final)
    except Exception as e:
            markup = types.ReplyKeyboardRemove(selective=False)
            print(e)
            bot.send_message(message.chat.id, f"üí∏–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-9', –ø–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)‚¨áÔ∏è", reply_markup=markup)


def dellete_all(message):

        markup = types.ReplyKeyboardRemove(selective=False)
        if message.text == "‚úÖ–¢–∞–∫":
            bot.send_message(message.chat.id, f"–í—Å—ñ –¥–∞–Ω—ñ –Ω–∞–∑–∞–≤–∂–¥–∏ –≤–∏–¥–∞–ª–µ–Ω—ñüí∏", reply_markup=markup)
            db.dell_id_all(f"{message.from_user.id}")

        elif message.text == "‚õîÔ∏è–ù—ñ":
            bot.send_message(message.chat.id, f"üí∏–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Äü§ù\n –ê —Ç–µ–ø—Ä–µ –ø–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)\n–≤–≤–µ–¥—ñ—Ç—å —Å—É–º—É —è–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø–∏—Å–∞—Ç–∏‚¨áÔ∏è \n –∞–±–æ –≤–∏ —Å–∞–º—ñ –∑–Ω–∞—î—Ç–µ —â–æ —Ä–æ–±–∏—Ç–∏", reply_markup=markup)

        else:
            bot.send_message(message.chat.id, f"üí∏–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-6 (dellete_all)', –ø–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)‚¨áÔ∏è", reply_markup=markup)


def dell_category_final(message):
    markup = types.ReplyKeyboardRemove(selective=False)
    try:
        chat_id = message.chat.id
        category = message.text
        finta = finta_dict[chat_id]
        parse_category = h.category_parser(category)
        finta.category = parse_category
        finta.category_abstraction = category

        keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        category_s = types.KeyboardButton(text="üß©–û—á–∏—Å—Ç–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é")
        category_row = types.KeyboardButton(text="üìå–í–∏–¥–∞–ª–∏—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ–π –∑–∞–ø–∏—Å")
        keyboard.add(category_s, category_row)
        msg=bot.send_message(message.chat.id,
                               f'üî¥–í–∏–¥–∞–ª–µ–Ω–Ω—è - –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –Ω–µ–∑–≤–æ—Ä–æ—Ç–Ω–∞, –≤—Ä–∞—Ö–æ–≤—É–π—Ç–µ —Ü–µ –ø—Ä–∏ –ø—Ä–∏–π–Ω—è—Ç—Ç—ñ —Ä—ñ—à–µ–Ω–Ω—è'
                               f'\n\n –û–±–µ—Ä—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫‚¨áÔ∏è', reply_markup=keyboard)
        bot.register_next_step_handler(msg, dell_category_final_o)
    except Exception as e:
        print(e)
        bot.send_message(message.chat.id, f"üí∏–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-7 (dell_category_final)', –ø–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)‚¨áÔ∏è",
                         reply_markup=markup)

def dell_category_final_o(message):

    try:
        markup = types.ReplyKeyboardRemove(selective=False)
        if message.text == "üß©–û—á–∏—Å—Ç–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é":
            keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            yes = types.KeyboardButton(text="‚úÖ–¢–∞–∫")
            cancel = types.KeyboardButton(text="‚õîÔ∏è–ù—ñ")
            keyboard.add(yes, cancel)
            msg=bot.send_message(message.chat.id,
                               f'–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñü§î‚¨áÔ∏è', reply_markup=keyboard)
            bot.register_next_step_handler(msg, toodo_dell_category)

        elif message.text == "üìå–í–∏–¥–∞–ª–∏—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—ñ–π –∑–∞–ø–∏—Å":
                markup = types.ReplyKeyboardRemove(selective=False)

                finta = finta_dict[message.from_user.id]
                veiw = db.dell_id_row_veiw(f"{message.from_user.id}", f"{finta.category}")

                keyboard = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
                yes = types.KeyboardButton(text="‚úÖ–¢–∞–∫")
                cancel = types.KeyboardButton(text="‚õîÔ∏è–ù—ñ")
                keyboard.add(yes, cancel)

                bot.send_message(message.chat.id,
                                 f"–û—Å—Ç–∞–Ω–Ω—è —Å—É–º–∞ —è–∫—É –≤–∏ –¥–æ–±–∞–≤–∏–ª–∏ –≤ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é\n{finta.category_abstraction}\n= {veiw} UAH",
                                 reply_markup=markup)

                msg = bot.send_message(message.chat.id, f"–í–∞–¥–∞–ª—è—î–º–æ ?‚¨áÔ∏è", reply_markup=keyboard)
                bot.register_next_step_handler(msg, dell_row_sum_category)
    except Exception as e:
            markup = types.ReplyKeyboardRemove(selective=False)
            print(e)
            bot.send_message(message.chat.id, f"üí∏–ù–µ–º–∞—î —â–æ –≤–∏–¥–∞–ª—è—Ç–∏ü§î –ê–±–æ –°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-8 (dell_category_final)',–ø–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)‚¨áÔ∏è", reply_markup=markup)

def toodo_dell_category(message):
    try:

        finta = finta_dict[message.from_user.id]

        markup = types.ReplyKeyboardRemove(selective=False)
        if message.text == "‚úÖ–¢–∞–∫":

            bot.send_message(message.chat.id, f"–£—Å—ñ –≤–∏—Ç—Ä–∞—Ç–∏ –∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó {finta.category_abstraction} \n–±—É–ª–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ üí∏",
                                   reply_markup=markup)
            db.dell_id_category(f"{message.from_user.id}", f"{finta.category}")

        elif message.text == "‚õîÔ∏è–ù—ñ":
            bot.send_message(message.chat.id, f"üí∏–ü—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Äü§ù\n –ê —Ç–µ–ø—Ä–µ –ø–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)\n–≤–≤–µ–¥—ñ—Ç—å —Å—É–º—É —è–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø–∏—Å–∞—Ç–∏‚¨áÔ∏è \n –∞–±–æ –≤–∏ —Å–∞–º—ñ –∑–Ω–∞—î—Ç–µ —â–æ —Ä–æ–±–∏—Ç–∏", reply_markup=markup)
    except Exception as e:
            print(e)
            markup = types.ReplyKeyboardRemove(selective=False)
            bot.send_message(message.chat.id, f"üí∏–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-9 (dell_category_final)', –ø–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)‚¨áÔ∏è", reply_markup=markup)

def dell_row_sum_category(message):
    try:
        markup = types.ReplyKeyboardRemove(selective=False)
        if message.text == "‚úÖ–¢–∞–∫":

            finta = finta_dict[message.from_user.id]
            bot.send_message(message.chat.id, f"üßπ–í–∏—Ç—Ä–∞—Ç–∞ –±—É–ª–∞ –≤–∏–¥–∞–ª–µ–Ω–∞", reply_markup=markup)
            db.dell_id_row(f"{message.from_user.id}", f"{finta.category}")


        elif message.text == "‚õîÔ∏è–ù—ñ":
            bot.send_message(message.chat.id, f"–ê —Ç–µ–ø—Ä–µ –ø–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)\n–≤–≤–µ–¥—ñ—Ç—å —Å—É–º—É —è–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø–∏—Å–∞—Ç–∏‚¨áÔ∏è \n–∞–±–æ –≤–∏ —Å–∞–º—ñ –∑–Ω–∞—î—Ç–µ —â–æ —Ä–æ–±–∏—Ç–∏", reply_markup=markup)

    except Exception as e:
            markup = types.ReplyKeyboardRemove(selective=False)
            print(e)
            bot.send_message(message.chat.id, f"üí∏–°—Ç–∞–ª–∞—Å—è –ü–æ–º–∏–ª–∫–∞-10' –ê–±–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ–º–∞—î —â–æ –≤–∏–¥–∞–ª—è—Ç–∏), –ø–æ—á–Ω–µ–º–æ –∑ –ø–æ—á–∞—Ç–∫—É)‚¨áÔ∏è", reply_markup=markup)






@bot.message_handler(func=lambda message: True, content_types=["text"])
def message_from_user(message):
    user_id = message.from_user.id
    update_message_count(user_id)

@server.route(f"/{BOT_TOKEN}", methods=["POST"])
def redirect_message():
    json_string = request.get_data().decode("utf-8")
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return "!", 200



if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=APP_URL)
    server.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))